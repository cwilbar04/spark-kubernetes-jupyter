{
  "type": "Teradata",
  "managed": true,
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "versionTag": {
    "versionNumber": 17,
    "lastModifiedBy": {
      "login": "U429930"
    },
    "lastModifiedOn": 1631916885384
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "U429930"
    },
    "lastModifiedOn": 1628785004264
  },
  "tags": [],
  "params": {
    "assumedDbTzForUnknownTz": "GMT",
    "primaryIndexBehavior": "AUTO",
    "primaryIndexIsUnique": false,
    "primaryIndexColumns": [],
    "connection": "Teradata_PROD",
    "notReadyIfEmpty": false,
    "mode": "table",
    "partitioningType": "custom",
    "normalizeDoubles": false,
    "table": "${PREFIX}CONTRACT_MONITORING${SUFFIX}",
    "schema": "${DATABASE}",
    "tableCreationMode": "auto",
    "writeInsertBatchSize": 10000,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "readColsWithUnknownTzAsDates": false,
    "readSQLDateColsAsDSSDates": true,
    "assumedTzForUnknownTz": "GMT"
  },
  "schema": {
    "columns": [
      {
        "name": "bill_pfin",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 30
      },
      {
        "name": "bill_pfin_10trimmed",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 30
      },
      {
        "name": "provider_bill_pfin_name",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 50
      },
      {
        "name": "provider_payee_name",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 50
      },
      {
        "name": "primy_prcg_prov_spclty_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 3
      },
      {
        "name": "dw_mbr_key",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "gndr_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 1
      },
      {
        "name": "mbr_zip",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 12
      },
      {
        "name": "mbr_city",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 28
      },
      {
        "name": "ACCT_NAME",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 50
      },
      {
        "name": "dw_clm_cntrl_key",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "claim_line_key",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 41
      },
      {
        "name": "dw_clm_key",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "li_num",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "incurd_dt",
        "type": "date",
        "originalType": "DATE",
        "timestampNoTzAsDate": true
      },
      {
        "name": "incurd_month",
        "type": "date",
        "originalType": "DATE",
        "timestampNoTzAsDate": true
      },
      {
        "name": "inpat_outpat_cd",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 1
      },
      {
        "name": "hcpcs_cpt_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 6
      },
      {
        "name": "HCPCS_CPT_Code_Desc",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "rvnu_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 4
      },
      {
        "name": "RevCD_Desc",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "HCPC_OR_REV_DESC",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "prim_diag",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "ICD-10-CM Codes Description",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "CCSR Category Description",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "DRG_CD",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 3
      },
      {
        "name": "DRG Description",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "maj_diag_cat_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 2
      },
      {
        "name": "Major Diagnostic Category (MDC)",
        "type": "string",
        "originalType": "VARCHAR",
        "maxLength": 255
      },
      {
        "name": "tos_cat_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 3
      },
      {
        "name": "tos_cat",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 255
      },
      {
        "name": "pos_cat_cd",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 2
      },
      {
        "name": "pos_cat",
        "type": "string",
        "originalType": "CHAR",
        "maxLength": 255
      },
      {
        "name": "billd_amt",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "prov_alwd_amt",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "net_elig_amt",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "net_elig_rd_amt",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "net_pd_rd_amt",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "Net_Elig_or_RD_pd",
        "type": "double",
        "originalType": "DECIMAL"
      },
      {
        "name": "LOS",
        "type": "int",
        "originalType": "INTEGER"
      }
    ],
    "userModified": true
  },
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "col_stats",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Columns statistics",
          "level": 2
        },
        "configuration": {
          "aggregates": [
            {
              "column": "claim_line_key",
              "aggregated": "COUNT_DISTINCT"
            }
          ]
        }
      },
      {
        "type": "adv_col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Most frequent values",
          "level": 3
        },
        "configuration": {
          "aggregates": [],
          "numberTopValues": 10
        }
      },
      {
        "type": "percentile_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns percentiles",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "verify_col",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Data validity",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "partition": "NP",
      "columns": [],
      "metrics": [
        "basic:COUNT_COLUMNS",
        "records:COUNT_RECORDS",
        "col_stats:COUNT_DISTINCT:claim_line_key"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [
      {
        "code": "# Define here a function that returns the outcome of the check.\ndef process(last_values, dataset, partition_id):\n    # last_values is a dict of the last values of the metrics,\n    # with the values as a dataiku.metrics.MetricDataPoint.\n    # dataset is a dataiku.Dataset object\n    result \u003d last_values[\u0027records:COUNT_RECORDS\u0027] \u003d\u003d last_values[\u0027col_stats:COUNT_DISTINCT:claim_line_key\u0027]\n    if result:\n        return \u0027OK\u0027, \u0027No duplication\u0027\n    return \u0027ERROR\u0027, \u0027Duplication exists. Check query.\u0027 # or \u0027WARNING\u0027 or \u0027ERROR\u0027\n",
        "envSelection": {
          "envMode": "INHERIT"
        },
        "type": "python",
        "meta": {
          "name": "Custom check"
        },
        "computeOnBuildMode": "PARTITION"
      }
    ],
    "displayedState": {
      "partition": "NP",
      "checks": []
    }
  },
  "customFields": {}
}